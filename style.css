/*
    CSS has 4 big areas::after

    1. transitions (beginning and end state)
            transition: <property> <duration> <timing-function> <delay>; 

            can also transition a transform (#2 below)

    2. transform
            for an element: rotate, scale (scaleX, scaleY), skew (skewX, skewY), translate

    3. keyframes (infinite inbetween states and stages)
            use @keyframe

            animation-name
            animation-duration
            animation-delay
            animation-iteration-count
            animation-direction
            animation-timing-function
            animation-fill-mode
            animation

*/






/* CSS TRANSITIONS ******************************************************************/
/* https://www.w3schools.com/css/css3_transitions.asp */

/* There are 4 properties to describe CSS transitions:

transition-property
transition-duration
transition-timing-function: 
    -sets how intermediate values are calculated for CSS properties being affected by a transition effect
    -values: linear, ease-in/out, steps(number, end), cubic-bezier(...)
transition-delay 

transition shorthand includes the above 4
transition: <property> <duration> <timing-function> <delay>; */

/* note: for left,right etc transitions: set non-static position AND set a left, even if 0 first before 
animating or it won't work */

/* CSS TRANSFORM ******************************************************************/
/* TRANSFORM: rotate, scale (scaleX, scaleY), skew (skewX, skewY), or translate an element 

These can also be transitioned over time via transition */


body {
    transition: all 1s;
}

body.vanish{
    /* display: none; */
    /* background: red; */
    opacity: 0;
}


.transJS{
    width: 100px;
    height: 100px;
    background: gray;

    /* property duration timing-function delay */
    transition: background-color 5s ease-out;
}


.testBox{
    width: 50px;
    height: 50px;
    background-color: purple;


    position: absolute;
    left: 0px;

    color: black;

    opacity: .1;
    
    transition: 
        all .2s ease-in-out;
        /* left 2000ms cubic-bezier(0.075, 0.82, 0.165, 1), 
        width 2000ms, 
        font-size 2000ms, 
        scalex 2000ms,
        scaley 2000ms,
        opacity 20ms; */
}

.testBox:hover{
    color: orange;
    background-color: green;
    opacity: 1;
    /* width: 60px; */
    transform: scale(1.1)
}

/* KEYFRAMES */
/* 
    animation-name
    animation-duration
    animation-delay
    animation-iteration-count: infinite, etc.
    animation-direction: alternate, etc.
    animation-timing-function
    animation-fill-mode

    animation shorthand: It is a shorthand for animation-name, animation-duration, animation-timing-function, 
                animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, 
                and animation-play-state.

    in @keyframes definition:
    from, to
    or 25%, 50%, etc. to 100%
*/


div.keyframeTrial {
    width: 100px;
    height: 100px;
    background-color: grey;
    /* background-color: red; */
    /* animation-name: example;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate; */

    /* shorthand */
    animation: example 1s infinite alternate;

    position: relative;

  }
  
  @keyframes example {
    5% {background-color: red;}
    100% {background-color: yellow;}

    5% {left: 10px;}
    25% {left: 50px;}
    100% {left: 200px;}

  }


  #buttonid{
    position: relative;
    display: block;
    opacity: 1;
    transition: background-color 3000ms, opacity 2000ms;

  }



 